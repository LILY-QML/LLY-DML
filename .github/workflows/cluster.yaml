name: Cluster Deployment with VPN, OTP, and Slurm

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install necessary packages
      run: |
        sudo apt-get update
        sudo apt-get install -y openvpn python3-pip wget qrencode sshpass
        pip3 install pyotp qrcode[pil]

    - name: Extract OTP Secret from QR Code for VPN
      id: extract_vpn_otp_secret
      run: |
        python3 -c "
import pyotp, qrcode
from io import BytesIO
from PIL import Image
qr_code_content = '${{ secrets.OTP_QR_CODE }}'
img = qrcode.make(qr_code_content)
buffer = BytesIO()
img.save(buffer, format='PNG')
secret = pyotp.parse_uri(buffer.getvalue()).secret
print(f'::set-output name=otp_secret::{secret}')"

    - name: Generate OTP for VPN
      id: generate_vpn_otp
      run: |
        python3 -c "
import pyotp
otp_secret = '${{ steps.extract_vpn_otp_secret.outputs.otp_secret }}'
totp = pyotp.TOTP(otp_secret)
print(f'::set-output name=otp::{totp.now()}')"

    - name: Download VPN config file
      run: wget -O config.ovpn ${{ secrets.VPN_CONFIG_URL }}

    - name: Connect to VPN
      run: |
        echo "${{ secrets.VPN_USERNAME }}" > vpn_credentials.txt
        echo "${{ secrets.VPN_PASSWORD }}" >> vpn_credentials.txt
        echo "${{ steps.generate_vpn_otp.outputs.otp }}" >> vpn_credentials.txt
        sudo openvpn --config config.ovpn --auth-user-pass vpn_credentials.txt &
        sleep 15  # Warte, bis die VPN-Verbindung hergestellt ist

    - name: Extract OTP Secret from QR Code for Cluster
      id: extract_cluster_otp_secret
      run: |
        python3 -c "
import pyotp, qrcode
from io import BytesIO
from PIL import Image
qr_code_content = '${{ secrets.CLUSTER_OTP_QR_CODE }}'
img = qrcode.make(qr_code_content)
buffer = BytesIO()
img.save(buffer, format='PNG')
secret = pyotp.parse_uri(buffer.getvalue()).secret
print(f'::set-output name=otp_secret::{secret}')"

    - name: Generate OTP for Cluster Login
      id: generate_cluster_otp
      run: |
        python3 -c "
import pyotp
otp_secret = '${{ steps.extract_cluster_otp_secret.outputs.otp_secret }}'
totp = pyotp.TOTP(otp_secret)
print(f'::set-output name=otp::{totp.now()}')"

    - name: Transfer code to cluster
      run: |
        sshpass -p "${{ secrets.CLUSTER_PASSWORD }}" scp -o StrictHostKeyChecking=no -r ./source_code ${CLUSTER_USERNAME}@${CLUSTER_HOST}:/home/${CLUSTER_USERNAME}/project/

    - name: Submit Slurm job
      run: |
        sshpass -p "${{ secrets.CLUSTER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${CLUSTER_USERNAME}@${CLUSTER_HOST} 'sbatch /home/${CLUSTER_USERNAME}/project/job_script.sh'
      env:
        CLUSTER_OTP: ${{ steps.generate_cluster_otp.outputs.otp }}
        CLUSTER_USERNAME: ${{ secrets.CLUSTER_USERNAME }}
        CLUSTER_HOST: ${{ secrets.CLUSTER_HOST }}

    - name: Clean up
      run: |
        rm -f vpn_credentials.txt config.ovpn
