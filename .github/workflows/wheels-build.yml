name: Build release artifacts

on:
  workflow_call:
    inputs:
      default-action:
        description: >-
          The default action for each artifact.
          Choose from 'build' (default) or 'skip'.
        type: string
        default: "build"
        required: false

      python-version:
        description: "The Python version to use to host the build runner."
        type: string
        default: "3.13"
        required: false

      artifact-prefix:
        description: "A prefix to give all artifacts uploaded with 'actions/upload-artifact'."
        type: string
        default: "LLY-DML-"
        required: false

      pgo:
        description: "Whether to enable profile-guided optimizations for supported platforms."
        type: boolean
        default: true
        required: false

jobs:
  wheels-tier-1:
    name: "Wheels / Tier 1"
    if: (inputs.default-action) == 'build'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-13
          - macos-14
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          architecture: ${{ matrix.os == 'macos-14' && 'arm64' || 'x64' }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Configure PGO
        shell: bash
        if: inputs.pgo
        run: |
          set -e
          mkdir -p "$PGO_WORK_DIR"
          cat >>"$GITHUB_ENV" <<EOF
          CIBW_BEFORE_BUILD=bash ./tools/build_pgo.sh $PGO_WORK_DIR $PGO_OUT_PATH
          CIBW_ENVIRONMENT=RUSTUP_TOOLCHAIN=stable RUSTFLAGS='-Cprofile-use=$PGO_OUT_PATH -Cllvm-args=-pgo-warn-missing-function'
          EOF
        env:
          PGO_WORK_DIR: ${{ github.workspace }}/pgo-data
          PGO_OUT_PATH: ${{ github.workspace }}/merged.profdata
      - uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_PARALLEL: 1
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: ${{ inputs.artifact-prefix }}wheels-tier-1-${{ matrix.os }}

  sdist:
    name: "Source Distribution (sdist)"
    if: (inputs.default-action) == 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Build sdist
        run: |
          set -e
          python -m pip install --upgrade pip build
          python -m build --sdist .
      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/*.tar.gz
          name: ${{ inputs.artifact-prefix }}sdist
